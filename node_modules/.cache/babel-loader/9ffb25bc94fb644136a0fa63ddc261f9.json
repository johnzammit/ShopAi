{"ast":null,"code":"var _jsxFileName = \"/Users/jczammit/Documents/GitHub/ShopAi/src/components/ImageSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { SliderData } from './SliderData';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'; // used to test out ImageSlider function before I made the custom button\n\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ImageSlider = _ref => {\n  _s();\n\n  let {\n    slides\n  } = _ref;\n  const [current, setCurrent] = useState(0); //important hook to track the variables in the function\n\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  const Button = styled.button` //custom button using 'styled components' - this was just my solution to get the invisible button \n  background-color: white;\n  color: white;\n  font-size: 0px;\n  padding: 0px 0px;\n  border-radius: 0px;\n  margin: 0px 0px;\n  cursor: pointer;\n  opacity: 0;\n`;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"slider\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"left-arrow\",\n      onClick: prevSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"right-arrow\",\n      onClick: nextSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), SliderData.map((slide, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index === current ? 'slide active' : 'slide',\n        children: index === current && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.image,\n          alt: \"home image\",\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageSlider, \"8+O75ArtRNvpQgzeZSk5wKohTHI=\");\n\n_c = ImageSlider;\nexport default ImageSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageSlider\");","map":{"version":3,"names":["React","useState","SliderData","FaArrowAltCircleRight","FaArrowAltCircleLeft","styled","ImageSlider","slides","current","setCurrent","length","nextSlide","prevSlide","Array","isArray","Button","button","map","slide","index","image"],"sources":["/Users/jczammit/Documents/GitHub/ShopAi/src/components/ImageSlider.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { SliderData } from './SliderData';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';// used to test out ImageSlider function before I made the custom button\nimport styled from 'styled-components';\n\n\nconst ImageSlider = ({ slides }) => {\n  const [current, setCurrent] = useState(0); //important hook to track the variables in the function\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n  const Button = styled.button` //custom button using 'styled components' - this was just my solution to get the invisible button \n  background-color: white;\n  color: white;\n  font-size: 0px;\n  padding: 0px 0px;\n  border-radius: 0px;\n  margin: 0px 0px;\n  cursor: pointer;\n  opacity: 0;\n`;\n  return (\n      \n    <section className='slider'>\n         \n      <Button className='left-arrow' onClick={prevSlide} />\n      <Button className='right-arrow' onClick={nextSlide} />\n      {SliderData.map((slide, index) => {\n        return (\n          <div\n            className={index === current ? 'slide active' : 'slide'}\n            key={index}\n          >\n            {index === current && (\n              <img src={slide.image} alt='home image' className='image' />\n            )}\n          </div>\n        );\n      })}\n    </section>\n    \n  );\n};\n\nexport default ImageSlider;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,gBAA5D,C,CAA6E;;AAC7E,OAAOC,MAAP,MAAmB,mBAAnB;;;AAGA,MAAMC,WAAW,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAClC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC,CADkC,CACS;;EAC3C,MAAMS,MAAM,GAAGH,MAAM,CAACG,MAAtB;;EAEA,MAAMC,SAAS,GAAG,MAAM;IACtBF,UAAU,CAACD,OAAO,KAAKE,MAAM,GAAG,CAArB,GAAyB,CAAzB,GAA6BF,OAAO,GAAG,CAAxC,CAAV;EACD,CAFD;;EAIA,MAAMI,SAAS,GAAG,MAAM;IACtBH,UAAU,CAACD,OAAO,KAAK,CAAZ,GAAgBE,MAAM,GAAG,CAAzB,GAA6BF,OAAO,GAAG,CAAxC,CAAV;EACD,CAFD;;EAIA,IAAI,CAACK,KAAK,CAACC,OAAN,CAAcP,MAAd,CAAD,IAA0BA,MAAM,CAACG,MAAP,IAAiB,CAA/C,EAAkD;IAChD,OAAO,IAAP;EACD;;EACD,MAAMK,MAAM,GAAGV,MAAM,CAACW,MAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATE;EAUA,oBAEE;IAAS,SAAS,EAAC,QAAnB;IAAA,wBAEE,QAAC,MAAD;MAAQ,SAAS,EAAC,YAAlB;MAA+B,OAAO,EAAEJ;IAAxC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,MAAD;MAAQ,SAAS,EAAC,aAAlB;MAAgC,OAAO,EAAED;IAAzC;MAAA;MAAA;MAAA;IAAA,QAHF,EAIGT,UAAU,CAACe,GAAX,CAAe,CAACC,KAAD,EAAQC,KAAR,KAAkB;MAChC,oBACE;QACE,SAAS,EAAEA,KAAK,KAAKX,OAAV,GAAoB,cAApB,GAAqC,OADlD;QAAA,UAIGW,KAAK,KAAKX,OAAV,iBACC;UAAK,GAAG,EAAEU,KAAK,CAACE,KAAhB;UAAuB,GAAG,EAAC,YAA3B;UAAwC,SAAS,EAAC;QAAlD;UAAA;UAAA;UAAA;QAAA;MALJ,GAEOD,KAFP;QAAA;QAAA;QAAA;MAAA,QADF;IAUD,CAXA,CAJH;EAAA;IAAA;IAAA;IAAA;EAAA,QAFF;AAqBD,CA9CD;;GAAMb,W;;KAAAA,W;AAgDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}